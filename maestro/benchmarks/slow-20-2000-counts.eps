%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Mon Mar 16 12:02:34 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (Kees van Reeuwijk,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 16 12:02:34 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
1846 527 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 527 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
1846 1012 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 1012 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 5000)]
] -40.0 MRshow
1.000 UL
LTb
1846 1498 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 1498 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 10000)]
] -40.0 MRshow
1.000 UL
LTb
1846 1983 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 1983 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 15000)]
] -40.0 MRshow
1.000 UL
LTb
1846 2469 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 2469 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 20000)]
] -40.0 MRshow
1.000 UL
LTb
1846 2954 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 2954 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 25000)]
] -40.0 MRshow
1.000 UL
LTb
1846 3440 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 3440 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 30000)]
] -40.0 MRshow
1.000 UL
LTb
1846 3925 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 3925 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 35000)]
] -40.0 MRshow
1.000 UL
LTb
1846 4411 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 4411 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 40000)]
] -40.0 MRshow
1.000 UL
LTb
1846 4896 M
63 0 V
2206 0 R
-63 0 V
stroke
1774 4896 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 45000)]
] -40.0 MRshow
1.000 UL
LTb
2413 527 M
0 63 V
stroke
2413 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Generate)]
] -40.0 MLshow
grestore
1.000 UL
LTb
2791 527 M
0 63 V
stroke
2791 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Scale)]
] -40.0 MLshow
grestore
1.000 UL
LTb
3170 527 M
0 63 V
stroke
3170 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Sharpen)]
] -40.0 MLshow
grestore
1.000 UL
LTb
3548 527 M
0 63 V
stroke
3548 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Compress)]
] -40.0 MLshow
grestore
1.000 UL
LTb
3926 527 M
0 63 V
stroke
3926 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Discard)]
] -40.0 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1846 4896 N
0 -4369 V
2269 0 V
0 4369 V
-2269 0 V
Z stroke
LCb setrgbcolor
1210 2711 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Number of frames)]
] -40.0 MCshow
grestore
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
1.000 2063 527 323 153 BoxColFill
LT1
1.000 2063 679 323 189 BoxColFill
LT2
1.000 2063 867 323 348 BoxColFill
LT3
1.000 2063 1214 323 168 BoxColFill
LT4
1.000 2063 1381 323 287 BoxColFill
LT5
1.000 2063 1667 323 187 BoxColFill
LT6
1.000 2063 1853 323 225 BoxColFill
LT7
1.000 2063 2077 323 315 BoxColFill
LT8
1.000 2063 2391 323 230 BoxColFill
LT0
1.000 2063 2620 323 140 BoxColFill
LT1
1.000 2063 2759 323 174 BoxColFill
LT2
1.000 2063 2932 323 169 BoxColFill
LT3
1.000 2063 3100 323 170 BoxColFill
LT4
1.000 2063 3269 323 184 BoxColFill
LT5
1.000 2063 3452 323 138 BoxColFill
LT6
1.000 2063 3589 323 142 BoxColFill
LT7
1.000 2063 3730 323 215 BoxColFill
LT8
1.000 2063 3944 323 164 BoxColFill
LT0
1.000 2063 4107 323 176 BoxColFill
LT1
1.000 2063 4282 323 145 BoxColFill
1.000 UL
LT1
LT0
1.000 2442 527 322 39 BoxColFill
LT1
1.000 2442 565 322 30 BoxColFill
LT2
1.000 2442 594 322 20 BoxColFill
LT3
1.000 2442 613 322 36 BoxColFill
LT4
1.000 2442 648 322 16 BoxColFill
LT5
1.000 2442 663 322 26 BoxColFill
LT6
1.000 2442 688 322 18 BoxColFill
LT7
1.000 2442 705 322 13 BoxColFill
LT8
1.000 2442 717 322 13 BoxColFill
LT0
1.000 2442 729 322 22 BoxColFill
LT1
1.000 2442 750 322 356 BoxColFill
LT2
1.000 2442 1105 322 367 BoxColFill
LT3
1.000 2442 1471 322 355 BoxColFill
LT4
1.000 2442 1825 322 369 BoxColFill
LT5
1.000 2442 2193 322 352 BoxColFill
LT6
1.000 2442 2544 322 367 BoxColFill
LT7
1.000 2442 2910 322 364 BoxColFill
LT8
1.000 2442 3273 322 364 BoxColFill
LT0
1.000 2442 3636 322 381 BoxColFill
LT1
1.000 2442 4016 322 410 BoxColFill
1.000 UL
LT2
LT0
1.000 2820 527 322 334 BoxColFill
LT1
1.000 2820 860 322 359 BoxColFill
LT2
1.000 2820 1218 322 381 BoxColFill
LT3
1.000 2820 1598 322 336 BoxColFill
LT4
1.000 2820 1933 322 401 BoxColFill
LT5
1.000 2820 2333 322 374 BoxColFill
LT6
1.000 2820 2706 322 390 BoxColFill
LT7
1.000 2820 3095 322 391 BoxColFill
LT8
1.000 2820 3485 322 411 BoxColFill
LT0
1.000 2820 3895 322 376 BoxColFill
LT1
1.000 2820 4270 322 14 BoxColFill
LT2
1.000 2820 4283 322 12 BoxColFill
LT3
1.000 2820 4294 322 15 BoxColFill
LT4
1.000 2820 4308 322 13 BoxColFill
LT5
1.000 2820 4320 322 31 BoxColFill
LT6
1.000 2820 4350 322 31 BoxColFill
LT7
1.000 2820 4380 322 1 BoxColFill
LT8
1.000 2820 4380 322 21 BoxColFill
LT0
1.000 2820 4400 322 9 BoxColFill
LT1
1.000 2820 4408 322 17 BoxColFill
1.000 UL
LT3
LT0
1.000 3198 527 322 259 BoxColFill
LT1
1.000 3198 785 322 273 BoxColFill
LT2
1.000 3198 1057 322 261 BoxColFill
LT3
1.000 3198 1317 322 306 BoxColFill
LT4
1.000 3198 1622 322 333 BoxColFill
LT5
1.000 3198 1954 322 307 BoxColFill
LT6
1.000 3198 2260 322 332 BoxColFill
LT7
1.000 3198 2591 322 364 BoxColFill
LT8
1.000 3198 2954 322 358 BoxColFill
LT0
1.000 3198 3311 322 350 BoxColFill
LT1
1.000 3198 3660 322 122 BoxColFill
LT2
1.000 3198 3781 322 122 BoxColFill
LT3
1.000 3198 3902 322 105 BoxColFill
LT4
1.000 3198 4006 322 106 BoxColFill
LT5
1.000 3198 4111 322 51 BoxColFill
LT6
1.000 3198 4161 322 21 BoxColFill
LT7
1.000 3198 4181 322 97 BoxColFill
LT8
1.000 3198 4277 322 47 BoxColFill
LT0
1.000 3198 4323 322 65 BoxColFill
LT1
1.000 3198 4387 322 36 BoxColFill
1.000 UL
LT4
LT0
1.000 3576 527 323 255 BoxColFill
LT1
1.000 3576 781 323 269 BoxColFill
LT2
1.000 3576 1049 323 259 BoxColFill
LT3
1.000 3576 1307 323 296 BoxColFill
LT4
1.000 3576 1602 323 324 BoxColFill
LT5
1.000 3576 1925 323 296 BoxColFill
LT6
1.000 3576 2220 323 327 BoxColFill
LT7
1.000 3576 2546 323 368 BoxColFill
LT8
1.000 3576 2913 323 346 BoxColFill
LT0
1.000 3576 3258 323 349 BoxColFill
LT1
1.000 3576 3606 323 128 BoxColFill
LT2
1.000 3576 3733 323 118 BoxColFill
LT3
1.000 3576 3850 323 109 BoxColFill
LT4
1.000 3576 3958 323 113 BoxColFill
LT5
1.000 3576 4070 323 26 BoxColFill
LT6
1.000 3576 4095 323 56 BoxColFill
LT7
1.000 3576 4150 323 105 BoxColFill
LT8
1.000 3576 4254 323 55 BoxColFill
LT0
1.000 3576 4308 323 73 BoxColFill
LT1
1.000 3576 4380 323 43 BoxColFill
1.000 UL
LTb
1846 4896 N
0 -4369 V
2269 0 V
0 4369 V
-2269 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
