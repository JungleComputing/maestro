%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Fri Feb 13 13:24:05 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Kees van Reeuwijk,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 13 13:24:05 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
/Helvetica findfont 120 scalefont setfont
1.000 UL
LTb
1810 527 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 527 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
1810 1012 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 1012 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 5000)]
] -40.0 MRshow
1.000 UL
LTb
1810 1498 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 1498 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 10000)]
] -40.0 MRshow
1.000 UL
LTb
1810 1983 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 1983 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 15000)]
] -40.0 MRshow
1.000 UL
LTb
1810 2469 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 2469 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 20000)]
] -40.0 MRshow
1.000 UL
LTb
1810 2954 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 2954 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 25000)]
] -40.0 MRshow
1.000 UL
LTb
1810 3440 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 3440 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 30000)]
] -40.0 MRshow
1.000 UL
LTb
1810 3925 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 3925 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 35000)]
] -40.0 MRshow
1.000 UL
LTb
1810 4411 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 4411 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 40000)]
] -40.0 MRshow
1.000 UL
LTb
1810 4896 M
63 0 V
2205 0 R
-63 0 V
stroke
1738 4896 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 45000)]
] -40.0 MRshow
1.000 UL
LTb
2164 527 M
0 63 V
stroke
2164 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Generate)]
] -40.0 MLshow
grestore
1.000 UL
LTb
2547 527 M
0 63 V
stroke
2547 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Scale)]
] -40.0 MLshow
grestore
1.000 UL
LTb
2930 527 M
0 63 V
stroke
2930 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Sharpen)]
] -40.0 MLshow
grestore
1.000 UL
LTb
3312 527 M
0 63 V
stroke
3312 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Compress)]
] -40.0 MLshow
grestore
1.000 UL
LTb
3695 527 M
0 63 V
stroke
3695 455 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Discard)]
] -40.0 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1810 4896 N
0 -4369 V
2268 0 V
0 4369 V
-2268 0 V
Z stroke
LCb setrgbcolor
1174 2711 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Number of frames)]
] -40.0 MCshow
grestore
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
1.000 2001 527 327 142 BoxColFill
LT1
1.000 2001 668 327 152 BoxColFill
LT2
1.000 2001 819 327 107 BoxColFill
LT3
1.000 2001 925 327 113 BoxColFill
LT4
1.000 2001 1037 327 102 BoxColFill
LT5
1.000 2001 1138 327 156 BoxColFill
LT6
1.000 2001 1293 327 81 BoxColFill
LT7
1.000 2001 1373 327 88 BoxColFill
LT8
1.000 2001 1460 327 72 BoxColFill
LT0
1.000 2001 1531 327 124 BoxColFill
LT1
1.000 2001 1654 327 144 BoxColFill
LT2
1.000 2001 1797 327 128 BoxColFill
LT3
1.000 2001 1924 327 297 BoxColFill
LT4
1.000 2001 2220 327 318 BoxColFill
LT5
1.000 2001 2537 327 261 BoxColFill
LT6
1.000 2001 2797 327 688 BoxColFill
LT7
1.000 2001 3484 327 294 BoxColFill
LT8
1.000 2001 3777 327 227 BoxColFill
LT0
1.000 2001 4003 327 205 BoxColFill
LT1
1.000 2001 4207 327 211 BoxColFill
1.000 UL
LT1
LT0
1.000 2384 527 327 130 BoxColFill
LT1
1.000 2384 656 327 139 BoxColFill
LT2
1.000 2384 794 327 146 BoxColFill
LT3
1.000 2384 939 327 155 BoxColFill
LT4
1.000 2384 1093 327 158 BoxColFill
LT5
1.000 2384 1250 327 148 BoxColFill
LT6
1.000 2384 1397 327 154 BoxColFill
LT7
1.000 2384 1550 327 172 BoxColFill
LT8
1.000 2384 1721 327 169 BoxColFill
LT0
1.000 2384 1889 327 148 BoxColFill
LT1
1.000 2384 2036 327 185 BoxColFill
LT2
1.000 2384 2220 327 193 BoxColFill
LT3
1.000 2384 2412 327 243 BoxColFill
LT4
1.000 2384 2654 327 243 BoxColFill
LT5
1.000 2384 2896 327 239 BoxColFill
LT6
1.000 2384 3134 327 216 BoxColFill
LT7
1.000 2384 3349 327 246 BoxColFill
LT8
1.000 2384 3594 327 255 BoxColFill
LT0
1.000 2384 3848 327 269 BoxColFill
LT1
1.000 2384 4116 327 300 BoxColFill
1.000 UL
LT2
LT0
1.000 2767 527 326 135 BoxColFill
LT1
1.000 2767 661 326 133 BoxColFill
LT2
1.000 2767 793 326 175 BoxColFill
LT3
1.000 2767 967 326 163 BoxColFill
LT4
1.000 2767 1129 326 159 BoxColFill
LT5
1.000 2767 1287 326 134 BoxColFill
LT6
1.000 2767 1420 326 145 BoxColFill
LT7
1.000 2767 1564 326 154 BoxColFill
LT8
1.000 2767 1717 326 180 BoxColFill
LT0
1.000 2767 1896 326 163 BoxColFill
LT1
1.000 2767 2058 326 161 BoxColFill
LT2
1.000 2767 2218 326 125 BoxColFill
LT3
1.000 2767 2342 326 257 BoxColFill
LT4
1.000 2767 2598 326 251 BoxColFill
LT5
1.000 2767 2848 326 258 BoxColFill
LT6
1.000 2767 3105 326 231 BoxColFill
LT7
1.000 2767 3335 326 250 BoxColFill
LT8
1.000 2767 3584 326 278 BoxColFill
LT0
1.000 2767 3861 326 268 BoxColFill
LT1
1.000 2767 4128 326 287 BoxColFill
1.000 UL
LT3
LT0
1.000 3150 527 326 160 BoxColFill
LT1
1.000 3150 686 326 194 BoxColFill
LT2
1.000 3150 879 326 207 BoxColFill
LT3
1.000 3150 1085 326 164 BoxColFill
LT4
1.000 3150 1248 326 158 BoxColFill
LT5
1.000 3150 1405 326 105 BoxColFill
LT6
1.000 3150 1509 326 143 BoxColFill
LT7
1.000 3150 1651 326 152 BoxColFill
LT8
1.000 3150 1802 326 195 BoxColFill
LT0
1.000 3150 1996 326 236 BoxColFill
LT1
1.000 3150 2231 326 1 BoxColFill
LT2
1.000 3150 2231 326 1 BoxColFill
LT3
1.000 3150 2231 326 223 BoxColFill
LT4
1.000 3150 2453 326 289 BoxColFill
LT5
1.000 3150 2741 326 327 BoxColFill
LT6
1.000 3150 3067 326 229 BoxColFill
LT7
1.000 3150 3295 326 228 BoxColFill
LT8
1.000 3150 3522 326 279 BoxColFill
LT0
1.000 3150 3800 326 312 BoxColFill
LT1
1.000 3150 4111 326 303 BoxColFill
1.000 UL
LT4
LT0
1.000 3533 527 326 149 BoxColFill
LT1
1.000 3533 675 326 187 BoxColFill
LT2
1.000 3533 861 326 216 BoxColFill
LT3
1.000 3533 1076 326 159 BoxColFill
LT4
1.000 3533 1234 326 144 BoxColFill
LT5
1.000 3533 1377 326 104 BoxColFill
LT6
1.000 3533 1480 326 133 BoxColFill
LT7
1.000 3533 1612 326 143 BoxColFill
LT8
1.000 3533 1754 326 154 BoxColFill
LT0
1.000 3533 1907 326 231 BoxColFill
LT1
1.000 3533 2137 326 62 BoxColFill
LT2
1.000 3533 2198 326 2 BoxColFill
LT3
1.000 3533 2199 326 224 BoxColFill
LT4
1.000 3533 2422 326 283 BoxColFill
LT5
1.000 3533 2704 326 328 BoxColFill
LT6
1.000 3533 3031 326 243 BoxColFill
LT7
1.000 3533 3273 326 231 BoxColFill
LT8
1.000 3533 3503 326 285 BoxColFill
LT0
1.000 3533 3787 326 317 BoxColFill
LT1
1.000 3533 4103 326 311 BoxColFill
1.000 UL
LTb
1810 4896 N
0 -4369 V
2268 0 V
0 4369 V
-2268 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
